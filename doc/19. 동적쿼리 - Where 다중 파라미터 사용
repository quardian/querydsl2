┌────────────────────────────────────────────────────────────────────────────────────────────────────┐
    동적쿼리 - Where 다중 파라미터 사용
└────────────────────────────────────────────────────────────────────────────────────────────────────┘

    [Where 다중 파라미터 사용]
    - 동적쿼리 소스 가독성 증가 및 where 조건문 재활용 및 조합 가능
    ┌────────────────────────────────────────────────────────────────────────────────────────────────────┐
        private List<Member> searchMember2(String usernameCond, Integer ageCond)
        {
            List<Member> result = queryFactory
                    .select(member)
                    .from(member)
                    .where(
                            usernameEq(usernameCond),
                            ageEq(ageCond)
                    )
                    .fetch();

            return result;
        }

        private BooleanExpression usernameEq(String usernameCond) {
            return usernameCond != null ? member.username.eq(usernameCond) : null;
        }

        private BooleanExpression ageEq(Integer ageCond) {
            return ageCond != null ? member.age.eq(ageCond) : null;
        }

        // 조건문 조립
        private BooleanExpression allEq(String usernameCond, Integer ageCond){
            return usernameEq(usernameCond).and(ageEq(ageCond));
        }
    └────────────────────────────────────────────────────────────────────────────────────────────────────┘
